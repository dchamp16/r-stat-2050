sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
#############################################################
#
# Confidence interval for a mean
#
#############################################################
## Load the library to read the excel file
library(readxl)
#### You will need to change this value for your own computer
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "Github", "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
#############################################################
#
# Confidence interval for a mean
#
#############################################################
## Load the library to read the excel file
library(readxl)
#### You will need to change this value for your own computer
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "Github", "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
ncha = as.data.frame(ncha)
#############################################################
#
# Normal distribution values
#
#############################################################
## Load the library to read the excel file
library(readxl)
#### You will need to change this value for your own computer
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "Github", "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
#############################################################
#
# Finding the mean and standard deviation
#
#############################################################
## Load the library to read the excel file
library(readxl)
#### You will need to change this value for your own computer
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "Github", "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
dataDir <- file.path(current_dir, "Github", "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
#############################################################
#
# t and z tests
#
#############################################################
## Load the library to read the excel file
library(readxl)
#### You will need to change this value for your own computer
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "Github", "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
#############################################################
#
# t and z tests
#
#############################################################
## Load the library to read the excel file
library(readxl)
#### You will need to change this value for your own computer
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
ncha = as.data.frame(ncha)
#############################################################
#
# t and z tests
#
#############################################################
## Load the library to read the excel file
library(readxl)
#### You will need to change this value for your own computer
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
ncha = as.data.frame(ncha)
#### Single sample t-test
# H0: mu is equal to 23
# Ha: mu is not equal to 23
t.test(ncha$BMI, mu = 23)
# Conclusion: We reject H0 and conclude that the true mean is different from 23.
#### Two sample t-test
# H0: difference is equal to 0
# Ha: difference is not equal to 0
t.test(x = ncha$BMI[ncha$N3Q1 == "Good"],
y = ncha$BMI[ncha$N3Q1 == "Excellent"], var.equal = TRUE)
# Conclusion: We reject H0 and conclude that the difference in means is not equal to 0.
#### One sample proportion z-test
# H0: p = .5
# Ha: p not equal to .5
prop.test(table(ncha$N3Q1 == "Good"), p = .5)
# Conclusion: We reject H0 and conclude that the proportion answering 'Good'
#             is not equal to 0.5.
#### two sample proportion z-test
# H0: difference in proportions is equal to 0
# Ha: difference in proportions is not equal to 0
smallData = ncha[ncha$RSEX %in% c("Male", "Female"), ]
prop.test(table(smallData$N3Q1 == "Good", smallData$RSEX))
# Conclusion: We cannot reject H0 and cannot conclude there is a difference in
#             proportion answering 'good' between male and female.
library(readxl)
# Assuming your data is stored in a similar directory structure
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
# Load the dataset
ncha = read_excel(paste(dataDir, "NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY - TIMESTAMP.xlsx", sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
library(readxl)
#### You will need to change this value for your own computer
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
ncha = as.data.frame(ncha)
# Single sample t-test: Mean number of minutes doing moderate exercise vs 250
# H0: mu = 250
# Ha: mu != 250
t_test_exercise_250 = t.test(ncha$N3Q6, mu = 250)
print(t_test_exercise_250)
# Two-sample t-test: Exercise minutes between "About the right weight" and "Slightly overweight"
# H0: No difference in means
# Ha: Difference in means
t_test_weight_diff = t.test(ncha$N3Q6[ncha$N3Q4 == "About the right weight"],
ncha$N3Q6[ncha$N3Q4 == "Slightly overweight"], var.equal = TRUE)
print(t_test_weight_diff)
# One-sample proportion z-test: Proportion describing weight as "About the right weight" vs 0.5
# H0: p = 0.5
# Ha: p != 0.5
prop_test_right_weight = prop.test(table(ncha$N3Q4 == "About the right weight"), p = 0.5)
print(prop_test_right_weight)
# Two-sample proportion z-test: Proportion of 'Excellent' between "About the right weight" and "Slightly overweight"
# H0: Proportions are equal
# Ha: Proportions are not equal
data_sub = ncha[ncha$N3Q4 %in% c("About the right weight", "Slightly overweight"),]
prop_test_excellent_weight = prop.test(table(data_sub$N3Q1 == "Excellent", data_sub$N3Q4))
print(prop_test_excellent_weight)
#############################################################
#
# t and z tests
#
#############################################################
## Load the library to read the excel file
library(readxl)
#### You will need to change this value for your own computer
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
ncha = as.data.frame(ncha)
#### Single sample t-test
# H0: mu is equal to 23
# Ha: mu is not equal to 23
t.test(ncha$BMI, mu = 23)
# Conclusion: We reject H0 and conclude that the true mean is different from 23.
#### Two sample t-test
# H0: difference is equal to 0
# Ha: difference is not equal to 0
t.test(x = ncha$BMI[ncha$N3Q1 == "Good"],
y = ncha$BMI[ncha$N3Q1 == "Excellent"], var.equal = TRUE)
# Conclusion: We reject H0 and conclude that the difference in means is not equal to 0.
#### One sample proportion z-test
# H0: p = .5
# Ha: p not equal to .5
prop.test(table(ncha$N3Q1 == "Good"), p = .5)
# Conclusion: We reject H0 and conclude that the proportion answering 'Good'
#             is not equal to 0.5.
#### two sample proportion z-test
# H0: difference in proportions is equal to 0
# Ha: difference in proportions is not equal to 0
smallData = ncha[ncha$RSEX %in% c("Male", "Female"), ]
prop.test(table(smallData$N3Q1 == "Good", smallData$RSEX))
# Conclusion: We cannot reject H0 and cannot conclude there is a difference in
#             proportion answering 'good' between male and female.
#############################################################
#
# t and z tests
#
#############################################################
## Load the library to read the excel file
library(readxl)
#### You will need to change this value for your own computer
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
ncha = as.data.frame(ncha)
#### Single sample t-test
# H0: mu is equal to 23
# Ha: mu is not equal to 23
t.test(ncha$BMI, mu = 23)
# Conclusion: We reject H0 and conclude that the true mean is different from 23.
#### Two sample t-test
# H0: difference is equal to 0
# Ha: difference is not equal to 0
t.test(x = ncha$BMI[ncha$N3Q1 == "Good"],
y = ncha$BMI[ncha$N3Q1 == "Excellent"], var.equal = TRUE)
# Conclusion: We reject H0 and conclude that the difference in means is not equal to 0.
#### One sample proportion z-test
# H0: p = .5
# Ha: p not equal to .5
prop.test(table(ncha$N3Q1 == "Good"), p = .5)
# Conclusion: We reject H0 and conclude that the proportion answering 'Good'
#             is not equal to 0.5.
#### two sample proportion z-test
# H0: difference in proportions is equal to 0
# Ha: difference in proportions is not equal to 0
smallData = ncha[ncha$RSEX %in% c("Male", "Female"), ]
prop.test(table(smallData$N3Q1 == "Good", smallData$RSEX))
# Conclusion: We cannot reject H0 and cannot conclude there is a difference in
#             proportion answering 'good' between male and female.
#############################################################
#
# t and z tests
#
#############################################################
## Load the library to read the excel file
library(readxl)
#### You will need to change this value for your own computer
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
ncha = as.data.frame(ncha)
#### Single sample t-test
# H0: mu is equal to 23
# Ha: mu is not equal to 23
t_test_exercise_250 = t.test(ncha$N3Q6, mu = 250)
print(t_test_exercise_250)
# Conclusion: We reject H0 and conclude that the true mean is different from 23.
#### Two sample t-test
# H0: difference is equal to 0
# Ha: difference is not equal to 0
t_test_weight_diff = t.test(ncha$N3Q6[ncha$N3Q4 == "About the right weight"],
ncha$N3Q6[ncha$N3Q4 == "Slightly overweight"], var.equal = TRUE)
print(t_test_weight_diff)
# Conclusion: We reject H0 and conclude that the difference in means is not equal to 0.
#### One sample proportion z-test
# H0: p = .5
# Ha: p not equal to .5
prop_test_right_weight = prop.test(table(ncha$N3Q4 == "About the right weight"), p = 0.5)
print(prop_test_right_weight)
# Conclusion: We reject H0 and conclude that the proportion answering 'Good'
#             is not equal to 0.5.
#### two sample proportion z-test
# H0: difference in proportions is equal to 0
# Ha: difference in proportions is not equal to 0
data_sub = ncha[ncha$N3Q4 %in% c("About the right weight", "Slightly overweight"),]
prop_test_excellent_weight = prop.test(table(data_sub$N3Q1 == "Excellent", data_sub$N3Q4))
print(prop_test_excellent_weight)
# Conclusion: We cannot reject H0 and cannot conclude there is a difference in
#             proportion answering 'good' between male and female.
#############################################################
#
# t and z tests
#
#############################################################
## Load the library to read the excel file
library(readxl)
#### You will need to change this value for your own computer
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
ncha = as.data.frame(ncha)
#### Single sample t-test
# H0: mu is equal to 23
# Ha: mu is not equal to 23
t.test(ncha$BMI, mu = 23)
# Conclusion: We reject H0 and conclude that the true mean is different from 23.
#### Two sample t-test
# H0: difference is equal to 0
# Ha: difference is not equal to 0
t.test(x = ncha$BMI[ncha$N3Q1 == "Good"],
y = ncha$BMI[ncha$N3Q1 == "Excellent"], var.equal = TRUE)
# Conclusion: We reject H0 and conclude that the difference in means is not equal to 0.
#### One sample proportion z-test
# H0: p = .5
# Ha: p not equal to .5
prop.test(table(ncha$N3Q1 == "Good"), p = .5)
# Conclusion: We reject H0 and conclude that the proportion answering 'Good'
#             is not equal to 0.5.
#### two sample proportion z-test
# H0: difference in proportions is equal to 0
# Ha: difference in proportions is not equal to 0
smallData = ncha[ncha$RSEX %in% c("Male", "Female"), ]
prop.test(table(smallData$N3Q1 == "Good", smallData$RSEX))
# Conclusion: We cannot reject H0 and cannot conclude there is a difference in
#             proportion answering 'good' between male and female.
library(readxl)
# Reading the Excel file
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
ncha = read_excel(paste(dataDir, "NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY - TIMESTAMP.xlsx", sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
library(readxl)
# Reading the Excel file
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "Github", "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V"))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
library(readxl)
# Reading the Excel file
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V"))
# Reading the Excel file
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V"))
library(readxl)
# Reading the Excel file
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
ncha = as.data.frame(ncha)
# t-tests
## Single sample t-test: N3Q6 vs 250 minutes
# H0: mu = 250
# Ha: mu != 250
t_test_exercise = t.test(ncha$N3Q6, mu = 250)
print(t_test_exercise)
# Conclusions based on the p-value
## Two-sample t-test: Exercise minutes between weight categories
# H0: No difference in means
# Ha: Difference in means
t_test_weight_diff = t.test(ncha$N3Q6[ncha$N3Q4 == "About the right weight"], ncha$N3Q6[ncha$N3Q4 == "Slightly overweight"], var.equal = TRUE)
print(t_test_weight_diff)
# Conclusions based on the p-value
# z-tests for proportions
## Proportion z-test: "About the right weight" vs 0.5
# H0: p = 0.5
# Ha: p != 0.5
prop_test_right_weight = prop.test(x = sum(ncha$N3Q4 == "About the right weight"), n = nrow(ncha), p = 0.5)
print(prop_test_right_weight)
# Conclusions based on the p-value
## Two-sample proportion z-test: Proportion of 'Excellent' between weight categories
# H0: Proportions are equal
# Ha: Proportions are not equal
data_sub = ncha[ncha$N3Q4 %in% c("About the right weight", "Slightly overweight"),]
prop_test_excellent_weight = prop.test(x = table(data_sub$N3Q1 == "Excellent", data_sub$N3Q4))
print(prop_test_excellent_weight)
# Conclusions based on the p-value
library(readxl)
# Reading the Excel file
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
ncha = as.data.frame(ncha)
# t-tests
## Single sample t-test: N3Q6 vs 250 minutes
# H0: mu = 250
# Ha: mu != 250
t_test_exercise = t.test(ncha$N3Q6, mu = 250)
print(t_test_exercise)
# Conclusions based on the p-value
## Two-sample t-test: Exercise minutes between weight categories
# H0: No difference in means
# Ha: Difference in means
t_test_weight_diff = t.test(ncha$N3Q6[ncha$N3Q4 == "About the right weight"], ncha$N3Q6[ncha$N3Q4 == "Slightly overweight"], var.equal = TRUE)
print(t_test_weight_diff)
# Conclusions based on the p-value
# z-tests for proportions
## Proportion z-test: "About the right weight" vs 0.5
# H0: p = 0.5
# Ha: p != 0.5
prop_test_right_weight = prop.test(x = sum(ncha$N3Q4 == "About the right weight"), n = nrow(ncha), p = 0.5)
print(prop_test_right_weight)
# Conclusions based on the p-value
## Two-sample proportion z-test: Proportion of 'Excellent' between weight categories
# H0: Proportions are equal
# Ha: Proportions are not equal
data_sub = ncha[ncha$N3Q4 %in% c("About the right weight", "Slightly overweight"),]
prop_test_excellent_weight = prop.test(x = table(data_sub$N3Q1 == "Excellent", data_sub$N3Q4))
print(prop_test_excellent_weight)
# Conclusions based on the p-value
library(readxl)
# Reading the Excel file
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
ncha = as.data.frame(ncha)
# t-tests
## Single sample t-test: N3Q6 vs 250 minutes
# H0: mu = 250
# Ha: mu != 250
t_test_exercise = t.test(ncha$N3Q6, mu = 250)
print(t_test_exercise)
# Conclusions based on the p-value
## Two-sample t-test: Exercise minutes between weight categories
# H0: No difference in means
# Ha: Difference in means
t_test_weight_diff = t.test(ncha$N3Q6[ncha$N3Q4 == "About the right weight"], ncha$N3Q6[ncha$N3Q4 == "Slightly overweight"], var.equal = TRUE)
print(t_test_weight_diff)
# Conclusions based on the p-value
# z-tests for proportions
## Proportion z-test: "About the right weight" vs 0.5
# H0: p = 0.5
# Ha: p != 0.5
prop_test_right_weight = prop.test(x = sum(ncha$N3Q4 == "About the right weight"), n = nrow(ncha), p = 0.5)
print(prop_test_right_weight)
# Conclusions based on the p-value
## Two-sample proportion z-test: Proportion of 'Excellent' between weight categories
# H0: Proportions are equal
# Ha: Proportions are not equal
data_sub = ncha[ncha$N3Q4 %in% c("About the right weight", "Slightly overweight"),]
prop_test_excellent_weight = prop.test(x = table(data_sub$N3Q1 == "Excellent", data_sub$N3Q4))
print(prop_test_excellent_weight)
# Conclusions based on the p-value
## Two-sample t-test: Exercise minutes between weight categories
# H0: No difference in means
# Ha: Difference in means
t_test_weight_diff = t.test(ncha$N3Q6[ncha$N3Q4 == "About the right weight"], ncha$N3Q6[ncha$N3Q4 == "Slightly overweight"], var.equal = TRUE)
library(readxl)
# Reading the Excel file
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
ncha = as.data.frame(ncha)
# t-tests
t_test_exercise = t.test(ncha$N3Q6, mu = 250)
print(t_test_exercise)
# Conclusions based on the p-value
t_test_weight_diff = t.test(ncha$N3Q6[ncha$N3Q4 == "About the right weight"], ncha$N3Q6[ncha$N3Q4 == "Slightly overweight"], var.equal = TRUE)
print(t_test_weight_diff)
# Conclusions based on the p-value
# z-tests for proportions
prop_test_right_weight = prop.test(x = sum(ncha$N3Q4 == "About the right weight"), n = nrow(ncha), p = 0.5)
print(prop_test_right_weight)
# Conclusions based on the p-value
data_sub = ncha[ncha$N3Q4 %in% c("About the right weight", "Slightly overweight"),]
prop_test_excellent_weight = prop.test(x = table(data_sub$N3Q1 == "Excellent", data_sub$N3Q4))
print(prop_test_excellent_weight)
# Conclusions based on the p-value
library(readxl)
# Reading the Excel file
current_dir <- dirname(normalizePath("."))
dataDir <- file.path(current_dir, "r-stat-2050", "datas")
### Read in the Dataset
ncha = read_excel(paste(dataDir,
"NCHA-III WEB SPRING 2021 UTAH VALLEY UNIVERSITY  - TIMESTAMP.xlsx",
sep = "/"), sheet = "NCHA-III WEB SPRING 2021 UTAH V")
ncha = as.data.frame(ncha)
t_test_exercise = t.test(ncha$N3Q6, mu = 250)
print(t_test_exercise)
t_test_weight_diff = t.test(ncha$N3Q6[ncha$N3Q4 == "About the right weight"], ncha$N3Q6[ncha$N3Q4 == "Slightly overweight"], var.equal = TRUE)
print(t_test_weight_diff)
prop_test_right_weight = prop.test(x = sum(ncha$N3Q4 == "About the right weight"), n = nrow(ncha), p = 0.5)
print(prop_test_right_weight)
data_sub = ncha[ncha$N3Q4 %in% c("About the right weight", "Slightly overweight"),]
prop_test_excellent_weight = prop.test(x = table(data_sub$N3Q1 == "Excellent", data_sub$N3Q4))
print(prop_test_excellent_weight)
q()
